type student struct {
	name  string
	score int
}

func findMax(a []student, n int) int {
	s := n
	for i := n + 1; i < len(a); i++ {
		if a[s].score < a[i].score {
			s = i
		}
	}
	return s
}

func sort(a []student) {
	for i := 0; i < len(a); i++ {
		s := findMax(a, i)
		a[i], a[s] = a[s], a[i]
	}
}

func passNames(a []student) []string {
	return [x.name for x <- a, x.score >= 60]
}

func findScore(a []student, name string) (score int, ok bool) {
	for x <- a {
		if x.name == name {
			return x.score, true
		}
	}
	return 0, false
}

func passedNames(a []student) []string {
	return [x.name for x <- a, x.score >= 60]
}

func findScore2(a []student, name string) (score int, ok bool) {
	return {x.score for x <- a, x.name == name}
}

func hasFailed(a []student) bool {
	return {for x <- a, x.score < 60}
}

a := [student{"a", 92}, student{"b", 53}, student{"c", 60}]

sort(a)
println(a)
println(findScore(a, "a"))
println(findScore(a, "jj"))
println(passedNames(a))
println(findScore2(a, "a"))
println(findScore2(a, "jj"))
println(hasFailed(a))
